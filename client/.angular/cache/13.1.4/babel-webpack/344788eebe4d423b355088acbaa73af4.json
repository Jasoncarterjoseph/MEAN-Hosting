{"ast":null,"code":"// RXJS\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst baseUrl = '/user';\nconst registerEndpoint = baseUrl + '/register';\nconst loginEndpoint = baseUrl + '/login';\nconst profileEndpoint = baseUrl + '/profile/';\nconst getPurchaseHistoryEndpoint = baseUrl + '/purchaseHistory';\nconst changeAvatarEndpoint = baseUrl + '/changeAvatar';\nconst blockCommentsEndpoint = baseUrl + '/blockComments/';\nconst unblockCommentsEndpoint = baseUrl + '/unlockComments/';\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(http) {\n      this.http = http;\n      this.subject = new Subject();\n    }\n\n    register(payload) {\n      return this.http.post(registerEndpoint, payload);\n    }\n\n    login(payload) {\n      console.log(\"In\");\n      return this.http.post(loginEndpoint, payload);\n    }\n\n    getProfile(username) {\n      return this.http.get(profileEndpoint + username);\n    }\n\n    getPurchaseHistory() {\n      return this.http.get(getPurchaseHistoryEndpoint);\n    }\n\n    changeAvatar(payload) {\n      return this.http.post(changeAvatarEndpoint, payload);\n    }\n\n    blockComments(id) {\n      return this.http.post(blockCommentsEndpoint + id, {});\n    }\n\n    unblockComments(id) {\n      return this.http.post(unblockCommentsEndpoint + id, {});\n    }\n\n  }\n\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module"}