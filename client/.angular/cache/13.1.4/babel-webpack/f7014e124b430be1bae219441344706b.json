{"ast":null,"code":"// Forms\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { UserService } from 'src/app/core/services/user.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/services/user.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\n\nfunction LoginComponent_div_8_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Username is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtemplate(1, LoginComponent_div_8_div_1_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.username.errors.required);\n  }\n}\n\nfunction LoginComponent_div_12_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Password is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_div_12_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Password must be between 3 and 16 symbols \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtemplate(1, LoginComponent_div_12_div_1_Template, 2, 0, \"div\", 11);\n    i0.ɵɵtemplate(2, LoginComponent_div_12_div_2_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.password.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.password.errors.minlength || ctx_r2.password.errors.maxlength);\n  }\n} // Services\n\n\nUserService;\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(userService, router) {\n      this.userService = userService;\n      this.router = router;\n    }\n\n    ngOnInit() {\n      this.loginForm = new FormGroup({\n        'username': new FormControl('', [Validators.required]),\n        'password': new FormControl('', [Validators.required, Validators.minLength(3), Validators.maxLength(16)])\n      });\n    }\n\n    onSubmit() {\n      this.userService.login(this.loginForm.value).subscribe(() => {\n        this.router.navigate(['/home']);\n      });\n    }\n\n    get username() {\n      return this.loginForm.get('username');\n    }\n\n    get password() {\n      return this.loginForm.get('password');\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 14,\n    vars: 4,\n    consts: [[1, \"form\", \"login-form\"], [3, \"formGroup\", \"ngSubmit\"], [\"formDir\", \"ngForm\"], [1, \"form-field\"], [\"type\", \"text\", \"name\", \"username\", \"placeholder\", \"Username\", \"formControlName\", \"username\", 1, \"username\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-user\"], [\"class\", \"input-error\", 4, \"ngIf\"], [\"type\", \"password\", \"name\", \"password\", \"placeholder\", \"***\", \"formControlName\", \"password\", 1, \"pass\"], [\"aria-hidden\", \"true\", 1, \"fa\", \"fa-unlock-alt\"], [\"type\", \"submit\", \"value\", \"Login\", 1, \"submit\", 3, \"disabled\"], [1, \"input-error\"], [4, \"ngIf\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"form\", 1, 2);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"h1\");\n        i0.ɵɵtext(4, \"Login Here\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵelement(6, \"input\", 4);\n        i0.ɵɵelement(7, \"i\", 5);\n        i0.ɵɵtemplate(8, LoginComponent_div_8_Template, 2, 1, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 3);\n        i0.ɵɵelement(10, \"input\", 7);\n        i0.ɵɵelement(11, \"i\", 8);\n        i0.ɵɵtemplate(12, LoginComponent_div_12_Template, 3, 2, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.username.invalid && (ctx.username.dirty || ctx.username.touched));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.password.invalid && (ctx.password.dirty || ctx.password.touched));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i4.NgIf],\n    styles: [\".login-form[_ngcontent-%COMP%]{font-family:Trebuchet MS,sans-serif;margin:135px auto}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}