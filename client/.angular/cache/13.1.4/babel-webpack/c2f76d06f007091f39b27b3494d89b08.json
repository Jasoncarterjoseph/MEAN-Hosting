{"ast":null,"code":"import { tap } from 'rxjs/operators'; // HTTP\n\nimport { HttpResponse } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-toastr\";\nimport * as i2 from \"../services/helper.service\";\nexport let SuccessInterceptor = /*#__PURE__*/(() => {\n  class SuccessInterceptor {\n    constructor(toastr, helperService) {\n      this.toastr = toastr;\n      this.helperService = helperService;\n    }\n\n    intercept(request, next) {\n      return next.handle(request).pipe(tap(event => {\n        if (event instanceof HttpResponse) {\n          if (event.body.message || event.body.message !== '') {\n            this.toastr.success(event.body.message);\n          }\n        }\n\n        if (event instanceof HttpResponse && request.url.endsWith('login') || event instanceof HttpResponse && request.url.endsWith('register')) {\n          this.helperService.saveSession(event.body.data);\n          this.helperService.isUserLogged.next(true);\n          this.helperService.cartStatus.next('updateStatus');\n        }\n      }));\n    }\n\n  }\n\n  SuccessInterceptor.ɵfac = function SuccessInterceptor_Factory(t) {\n    return new (t || SuccessInterceptor)(i0.ɵɵinject(i1.ToastrService), i0.ɵɵinject(i2.HelperService));\n  };\n\n  SuccessInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SuccessInterceptor,\n    factory: SuccessInterceptor.ɵfac\n  });\n  return SuccessInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}