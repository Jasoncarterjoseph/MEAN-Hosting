{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./book.service\";\nimport * as i3 from \"./helper.service\";\nconst baseUrl = 'user/cart';\nconst getCartSizeEndpoint = 'cart/getSize';\nconst addToCartEndpoint = '/add/';\nconst removeFromCartEndpoint = '/delete/';\nconst checkoutEndpoint = '/checkout';\nexport let CartService = /*#__PURE__*/(() => {\n  class CartService {\n    constructor(http, bookService, helperService) {\n      this.http = http;\n      this.bookService = bookService;\n      this.helperService = helperService;\n      this.cart = [];\n      this.purchasedCart = [];\n      this.historyCart = [];\n    }\n\n    getCartSize() {\n      return this.http.get(getCartSizeEndpoint);\n    }\n\n    getCart() {\n      return this.http.get(baseUrl).pipe(map(res => {\n        res.data.books.map(b => b.qty = 1);\n        return res;\n      }));\n    }\n\n    addToCart(id) {\n      return this.http.post(baseUrl + addToCartEndpoint + id, {});\n    }\n\n    removeFromCart(id) {\n      return this.http.delete(baseUrl + removeFromCartEndpoint + id);\n    }\n\n    checkout(payload) {\n      return this.http.post(baseUrl + checkoutEndpoint, payload);\n    }\n\n    getPurchaseHistory(userId) {\n      const historyReceipt = this.purchasedCart.map(object => {\n        if (object.userId == userId) {\n          return object;\n        }\n      });\n      return historyReceipt;\n    }\n\n  }\n\n  CartService.ɵfac = function CartService_Factory(t) {\n    return new (t || CartService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.BookService), i0.ɵɵinject(i3.HelperService));\n  };\n\n  CartService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CartService,\n    factory: CartService.ɵfac,\n    providedIn: 'root'\n  });\n  return CartService;\n})();","map":null,"metadata":{},"sourceType":"module"}